CI = function(x){
# x is a vector of random variables
n = length(x)
mu = mean(x)
sig = sd(x)
upper = mu + 1.96/sqrt(n) * sig
lower = mu - 1.96/sqrt(n) * sig
return( list( upper = upper, lower = lower) )
}
x = rchisq(100, df = 5)
CI(x)
?rpois
x = rpois(100, lambda = 2)
CI(x)
Rep = 1000
capture = rep(0, Rep)
for (i = 1:Rep){
for (i in 1:Rep){
mu = 2
x = rpois(100, mu)
bounds = CI(x)
capture[i] = ( ( bounds$lower <= mu  ) & (mu <= bounds$upper) )
}
mean(capture) # empirical size
Rep = 1000
capture = rep(0, Rep)
for (i in 1:Rep){
mu = 2
x = rpois(10, mu)
bounds = CI(x)
capture[i] = ( ( bounds$lower <= mu  ) & (mu <= bounds$upper) )
}
mean(capture) # empirical size
system.time()
?Sys.time
?system.times
?system.time
pts0 = system.time() # check time
for (i in 1:Rep){
mu = 2
x = rpois(10, mu)
bounds = CI(x)
capture[i] = ( ( bounds$lower <= mu  ) & (mu <= bounds$upper) )
}
mean(capture) # empirical size
pts1 = system.time() - pts0 # check time elapse
pts0 = Sys.time() # check time
for (i in 1:Rep){
mu = 2
x = rpois(10, mu)
bounds = CI(x)
capture[i] = ( ( bounds$lower <= mu  ) & (mu <= bounds$upper) )
}
mean(capture) # empirical size
pts1 = Sys.time() - pts0 # check time elapse
print(pts1)
Rep = 1000
capture = rep(0, Rep)
pts0 = Sys.time() # check time
for (i in 1:Rep){
mu = 2
x = rpois(100, mu)
bounds = CI(x)
capture[i] = ( ( bounds$lower <= mu  ) & (mu <= bounds$upper) )
}
mean(capture) # empirical size
pts1 = Sys.time() - pts0 # check time elapse
print(pts1)
Rep = 10000
capture = rep(0, Rep)
pts0 = Sys.time() # check time
for (i in 1:Rep){
mu = 2
x = rpois(100, mu)
bounds = CI(x)
capture[i] = ( ( bounds$lower <= mu  ) & (mu <= bounds$upper) )
}
mean(capture) # empirical size
pts1 = Sys.time() - pts0 # check time elapse
print(pts1)
HEX = read.csv("http://ichart.finance.yahoo.com/table.csv?s=0388.HK") # read data
print(head(HEX))
?write.csv
data(carat)
data(iris)
head(iris)
